// <auto-generated />
using System;
using HomeMonitoring.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeMonitoring.Shared.Migrations
{
    [DbContext(typeof(SensorDbContext))]
    [Migration("20250913054154_AddPhilipsHueLights")]
    partial class AddPhilipsHueLights
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-rc.1.25451.107")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeMonitoring.Shared.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DiscoveredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSeenAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductTypeRaw")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.EnergyReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActivePowerW")
                        .HasColumnType("float");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalGasM3")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPowerExportT1KWh")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPowerExportT2KWh")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPowerImportT1KWh")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPowerImportT2KWh")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId", "Timestamp");

                    b.ToTable("EnergyReadings");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.PhilipsHue.HueLight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BridgeIpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("DiscoveredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("HueId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSeenAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HueId", "BridgeIpAddress")
                        .IsUnique();

                    b.ToTable("HueLights");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.PhilipsHue.HueLightReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Brightness")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ColorTemperature")
                        .HasColumnType("int");

                    b.Property<int?>("Hue")
                        .HasColumnType("int");

                    b.Property<int>("HueLightId")
                        .HasColumnType("int");

                    b.Property<bool>("On")
                        .HasColumnType("bit");

                    b.Property<bool>("Reachable")
                        .HasColumnType("bit");

                    b.Property<byte?>("Saturation")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HueLightId", "Timestamp");

                    b.ToTable("HueLightReadings");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.EnergyReading", b =>
                {
                    b.HasOne("HomeMonitoring.Shared.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.PhilipsHue.HueLightReading", b =>
                {
                    b.HasOne("HomeMonitoring.Shared.Models.PhilipsHue.HueLight", "HueLight")
                        .WithMany("Readings")
                        .HasForeignKey("HueLightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HueLight");
                });

            modelBuilder.Entity("HomeMonitoring.Shared.Models.PhilipsHue.HueLight", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
